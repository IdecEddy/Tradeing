# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate_docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11 # Adjust the Python version as needed

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python3/requirements.txt

      - name: Generate Documentation
        run: |
          pdoc -o docs python3/src  # Adjust the input and output directories as needed

      - name: Archive Directory
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./docs
  
  generate_code_cov:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/python3
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11 # Adjust the Python version as needed
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python3/requirements.txt
      - name: Generate code coverage report 
        run: pytest --cov --cov-report=html:coverage_re python3/tests
      - name: Archive Directory
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage_re

  create_github_pages:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: 
      - generate_docs
      - generate_code_cov
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: ./github_pages/coverage
      - name: Download docs
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./github_pages/docs
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: './github_pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2         
